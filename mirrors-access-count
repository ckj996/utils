#!/usr/bin/env perl

use v5.20;

#
# find logs
#
my $logdir = "/var/log/nginx/";
my $logname = "mirrors-access.log*";
my $mirrordir = "/srv/www/mirrors/";

my $month = shift @ARGV;
my $year = shift @ARGV;

chomp($year = `date +%Y`) unless defined $year;
chomp($month = `date +%m`) unless defined $month;

chomp(my $sdate = `date -d "$year-$month-01" +%Y-%m-%d`);
chomp(my $edate = `date -d "$year-$month-02 +1 month" +%Y-%m-%d`);

chomp(my $sfile = `mktemp`);
chomp(my $efile = `mktemp`);

`touch -d "$sdate" $sfile`;
`touch -d "$edate" $efile`;

chomp(my @logfiles = `find "$logdir" -name "$logname" -type f -newer $sfile ! -newer $efile`);

`rm $sfile`;
`rm $efile`;

#
# parse logs
#
chomp(my $month_name = `date -d "$year-$month-01" +%b`);

my %data;

for (@logfiles) {
	if (/\.gz$/) {
		open(INPUT, "-|", "gunzip -c $_");
	} else {
		open(INPUT, "-|", "cat $_");
	}

	LINE: for (<INPUT>) {
		my (
			$ip,		# 222.25.188.1
			undef,		# -
			undef,		# -
			$time,		# [15/May/2017:06:25:30
			undef,		# +0800]
			$request,	# "GET
			$url,		# /ubuntu/dists/precise/Release.gpg
			undef,		# HTTP/1.1"
			$respond,	# 304
		) = split;

		next LINE if $request ne '"GET';	# count GET request only
		next LINE if $url =~ '/$';		# ignore directory

		my (undef, $mm, $yy) = split('[/:]', $time);

		next LINE if $yy ne $year;
		next LINE if $mm ne $month_name;

		my (undef, $distro) = split('/', $url);

		$data{$distro}[$respond]++;
	}

	close(INPUT);
}

#
# write post
#

chomp(my @distros = `ls $mirrordir`);
my ($success, $error) = (0, 0);

for my $distro (@distros) {
	my $dist_ref = $data{$distro};
	$success += $dist_ref->[200] + $dist_ref->[304];
	$error += $dist_ref->[404];
}

my $title = "软件源使用统计";
chomp(my $date = `date "+%Y-%m-%d %H-%M-%S %z"`);

my $entry_syntax = "%-20s%10d%10d\n";
my $title_syntax = ($entry_syntax =~ s/d/s/gr);

say "---";
say "layout: post";
say "title: \"[$month_name $year] $title\"";
say "date: $date";
say "categories: reports";
say "description: \"SUCCESS: $success; ERROR: $error\"";
say "---";

say "```";
printf($title_syntax, "ENTRY", "SUCCESS", "ERR=404");

for my $distro (@distros) {

	my $dist_ref = $data{$distro};

	printf($entry_syntax,
		$distro,
		$dist_ref->[200] + $dist_ref->[304],	# SUCCESS
		$dist_ref->[404],			# ERR=404
	);

}
say "```";
