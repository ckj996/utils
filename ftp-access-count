#!/usr/bin/env perl

use v5.20;

#
# get current time
#
my ($sec, $min, $hour, $mday, $mon, $year) = localtime(time);
my @m= qw( Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec );

#
# set post title, date, description
#
my $title = sprintf('"[%s %d] 软件源使用统计"', $m[$mon], $year + 1900);
my $date = sprintf('%04d-%02d-%02d %02d:%02d:%02d +0800',
		$year + 1900, $mon + 1, $mday, $hour, $min, $sec);
my $description = "mirror utilization report, based on ftp access count";

#
# search at most last 38 days logs (31 + 7)
# find entries in sync dir
#
chomp(my @logfiles = `find /var/log/nginx/ftp-access.log* -mtime -38`);
chomp(my @entries = `ls /home/docker/mirror/mirrors`);

#
# define success and fail states
# seperated with |
#
my $succ = "200|304";
my $fail = "404";

#
# start ftp access count 
#
my %data;

for (@logfiles) {
	if (/\.gz$/) {
		open(INPUT, "-|", "sudo gunzip -c $_");
	} else {
		open(INPUT, "-|", "sudo cat $_");
	}

	LINE: for (<INPUT>) {

	# log example:
	#
	# 10.170.26.173 - - [26/Dec/2016:19:36:44 +0800]\
	# "GET /archlinux/core/os/x86_64/core.db HTTP/1.1" 200 125714\
	# "-" "pacman/5.0.1 (Linux x86_64) libalpm/10.0.1"
	#
		if (m%\[\d+?/$m[$mon]/.+?\] "GET (\S+?) \S+?" ($succ|$fail)%o) {
			my ($filepath, $state) = ($1, $2);

			# skip directories
			# and must include a entry name
			next LINE unless $filepath =~ m%^/(.+?)/.+[^/]$%;
			my $entry = $1;
			my $stateno = ($state =~ /$fail/o);

			$data{$entry}[$stateno]++;
		}
	}

	close(INPUT);
}

#
# write out the post
#
say "---";
say "layout: post";
say "title: $title";
say "date: $date";
say "categories: reports";
say "description: $description";
say "---";

say "```";
printf "%-20s %16s %16s\n", "ENTRY", "SUCCESS", "ERR=$fail";
for (@entries) {
	printf "%-20s %16d %16d\n", $_, $data{$_}[0], $data{$_}[1];
}
say "```";

